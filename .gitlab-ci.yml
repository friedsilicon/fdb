stages: 
  - build
  - publish 

variables: 
  CPPUTEST_HOME: /usr/

before_script: 
  - git submodule sync
  - git submodule update --init --recursive
 
build: 
  image: vshivanand/alpine-cpp-build:latest
  artifacts: 
    paths: 
      - build/
  script: 
    - mkdir build
    - cd build
    - cmake -DCMAKE_BUILD_TYPE=Debug -DWITH_COVERAGE=ON ..
    - make VERBOSE=1 && make coverage VERBOSE=1
  stage: build

github-mirror:
  image: vshivanand/alpine-cpp-build:latest
  script: 
    - git remote add origin https://${GH_TOKEN}@github.com/friedsilicon/fdb.git > /dev/null 2>&1
    - git push -u origin ${CI_COMMIT_REF_NAME}
  stage: publish

coverage:
  image: alpine:latest
  before_script: []
  stage: publish
  dependencies:
    - build
  when: on_success
  script:
    - mkdir public/
    - mv build/coverage-report-test-fdb public/coverage
  artifacts:
    paths:
      - public
  only:
    - master
